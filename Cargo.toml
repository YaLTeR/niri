[workspace]
members = ["niri-visual-tests"]

[workspace.package]
version = "0.1.7"
description = "A scrollable-tiling Wayland compositor"
authors = ["Ivan Molodetskikh <yalterz@gmail.com>"]
license = "GPL-3.0-or-later"
edition = "2021"
repository = "https://github.com/YaLTeR/niri"

[workspace.dependencies]
anyhow = "1.0.86"
bitflags = "2.6.0"
clap = { version = "~4.4.18", features = ["derive"] }
serde = { version = "1.0.204", features = ["derive"] }
serde_json = "1.0.120"
tracing = { version = "0.1.40", features = ["max_level_trace", "release_max_level_debug"] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracy-client = { version = "0.17.0", default-features = false }

[workspace.dependencies.smithay]
git = "https://github.com/Smithay/smithay.git"
# path = "../smithay"
default-features = false

[workspace.dependencies.smithay-drm-extras]
git = "https://github.com/Smithay/smithay.git"
# path = "../smithay/smithay-drm-extras"

[package]
name = "niri"
version.workspace = true
description.workspace = true
authors.workspace = true
license.workspace = true
edition.workspace = true
repository.workspace = true

readme = "README.md"
keywords = ["wayland", "compositor", "tiling", "smithay", "wm"]

[dependencies]
anyhow.workspace = true
arrayvec = "0.7.4"
async-channel = "2.3.1"
async-io = { version = "1.13.0", optional = true }
atomic = "0.6.0"
bitflags.workspace = true
bytemuck = { version = "1.16.1", features = ["derive"] }
calloop = { version = "0.14.0", features = ["executor", "futures-io"] }
clap = { workspace = true, features = ["string"] }
directories = "5.0.1"
drm-ffi = "0.8.0"
fastrand = "2.1.0"
futures-util = { version = "0.3.30", default-features = false, features = ["std", "io"] }
git-version = "0.3.9"
glam = "0.28.0"
input = { version = "0.9.0", features = ["libinput_1_21"] }
keyframe = { version = "1.1.1", default-features = false }
libc = "0.2.155"
log = { version = "0.4.22", features = ["max_level_trace", "release_max_level_debug"] }
niri-config = { version = "0.1.7", path = "niri-config" }
niri-ipc = { version = "0.1.7", path = "niri-ipc", features = ["clap"] }
notify-rust = { version = "~4.10.0", optional = true }
ordered-float = "4.2.1"
pango = { version = "0.19.8", features = ["v1_44"] }
pangocairo = "0.19.8"
pipewire = { version = "0.8.0", optional = true }
png = "0.17.13"
portable-atomic = { version = "1.6.0", default-features = false, features = ["float"] }
profiling = "1.0.15"
sd-notify = "0.4.2"
serde.workspace = true
serde_json.workspace = true
smithay-drm-extras.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true
tracy-client.workspace = true
url = { version = "2.5.2", optional = true }
xcursor = "0.3.5"
zbus = { version = "~3.15.2", optional = true }

[dependencies.smithay]
workspace = true
features = [
    "backend_drm",
    "backend_egl",
    "backend_gbm",
    "backend_libinput",
    "backend_session_libseat",
    "backend_udev",
    "backend_winit",
    "desktop",
    "renderer_gl",
    "renderer_pixman",
    "renderer_multi",
    "use_system_lib",
    "wayland_frontend",
]

[dev-dependencies]
approx = "0.5.1"
k9 = "0.12.0"
proptest = "1.5.0"
proptest-derive = "0.5.0"
xshell = "0.2.6"

[features]
default = ["dbus", "systemd", "xdp-gnome-screencast"]
# Enables D-Bus support (serve various freedesktop and GNOME interfaces, power button handling).
dbus = ["zbus", "async-io", "notify-rust", "url"]
# Enables systemd integration (global environment, apps in transient scopes).
systemd = ["dbus"]
# Enables screencasting support through xdg-desktop-portal-gnome.
xdp-gnome-screencast = ["dbus", "pipewire"]
# Enables the Tracy profiler instrumentation.
profile-with-tracy = ["profiling/profile-with-tracy", "tracy-client/default"]
# Enables dinit integration (global environment).
dinit = []

[profile.release]
debug = "line-tables-only"
overflow-checks = true
lto = "thin"

[profile.release.package.niri-config]
# knuffel with chomsky generates a metric ton of debuginfo.
debug = false

[package.metadata.generate-rpm]
version = "0.1.7"
assets = [
    { source = "target/release/niri", dest = "/usr/bin/", mode = "755" },
    { source = "resources/niri-session", dest = "/usr/bin/", mode = "755" },
    { source = "resources/niri.desktop", dest = "/usr/share/wayland-sessions/", mode = "644" },
    { source = "resources/niri-portals.conf", dest = "/usr/share/xdg-desktop-portal/", mode = "644" },
    { source = "resources/niri.service", dest = "/usr/lib/systemd/user/", mode = "644" },
    { source = "resources/niri-shutdown.target", dest = "/usr/lib/systemd/user/", mode = "644" },
]
[package.metadata.generate-rpm.requires]
alacritty = "*"
fuzzel = "*"

[package.metadata.deb]
depends = "alacritty, fuzzel"
assets = [
    ["target/release/niri", "usr/bin/", "755"],
    ["resources/niri-session", "usr/bin/", "755"],
    ["resources/niri.desktop", "/usr/share/wayland-sessions/", "644"],
    ["resources/niri-portals.conf", "/usr/share/xdg-desktop-portal/", "644"],
    ["resources/niri.service", "/usr/lib/systemd/user/", "644"],
    ["resources/niri-shutdown.target", "/usr/lib/systemd/user/", "644"],
]
