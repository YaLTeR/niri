name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *' # Monthly

env:
  RUN_SLOW_TESTS: 1
  DEPS_APT: curl gcc clang libudev-dev libgbm-dev libxkbcommon-dev libegl1-mesa-dev libwayland-dev libinput-dev libdbus-1-dev libsystemd-dev libseat-dev libpipewire-0.3-dev libpango1.0-dev libdisplay-info-dev
  DEPS_DNF: cargo gcc clang libudev-devel libgbm-devel libxkbcommon-devel wayland-devel libinput-devel dbus-devel systemd-devel libseat-devel pipewire-devel pango-devel cairo-gobject-devel libdisplay-info-devel
  # Add CARGO_NET_GIT_FETCH_WITH_CLI as an environment variable for all jobs
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build:
    strategy:
      fail-fast: false

      matrix:
        configuration: [debug, release]

        include:
          - configuration: release
            release-flag: '--release'

    name: test - ${{ matrix.configuration }}
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.configuration }}
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Check (no default features)
        run: |
          for i in {1..3}; do
            cargo check ${{ matrix.release-flag }} --no-default-features && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Check (just dbus)
        run: |
          for i in {1..3}; do
            cargo check ${{ matrix.release-flag }} --no-default-features --features dbus && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Check (just systemd)
        run: |
          for i in {1..3}; do
            cargo check ${{ matrix.release-flag }} --no-default-features --features systemd && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Check (just dinit)
        run: |
          for i in {1..3}; do
            cargo check ${{ matrix.release-flag }} --no-default-features --features dinit && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Check (just xdp-gnome-screencast)
        run: |
          for i in {1..3}; do
            cargo check ${{ matrix.release-flag }} --no-default-features --features xdp-gnome-screencast && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Check
        run: |
          for i in {1..3}; do
            cargo check ${{ matrix.release-flag }} && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Build (with profiling)
        run: |
          for i in {1..3}; do
            cargo build ${{ matrix.release-flag }} --features profile-with-tracy && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Build tests
        run: |
          for i in {1..3}; do
            cargo test --no-run --all --exclude niri-visual-tests ${{ matrix.release-flag }} && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Test
        run: |
          for i in {1..3}; do
            cargo test --all --exclude niri-visual-tests ${{ matrix.release-flag }} -- --nocapture && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

  # Job that runs randomized tests for a longer period of time.
  randomized-tests:
    strategy:
      fail-fast: false

    name: randomized tests
    runs-on: ubuntu-24.04

    env:
      RUST_BACKTRACE: 1
      PROPTEST_CASES: 200000
      PROPTEST_MAX_LOCAL_REJECTS: 200000
      PROPTEST_MAX_GLOBAL_REJECTS: 200000
      PROPTEST_MAX_SHRINK_ITERS: 200000

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Build tests
        run: |
          for i in {1..3}; do
            cargo test --no-run --all --exclude niri-visual-tests --release && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

      - name: Test
        run: |
          for i in {1..3}; do
            cargo test --all --exclude niri-visual-tests --release && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

  visual-tests:
    strategy:
      fail-fast: false

    name: visual tests
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }} libadwaita-1-dev

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Build
        run: |
          for i in {1..3}; do
            cargo build --package niri-visual-tests && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

  msrv:
    strategy:
      fail-fast: false

    name: msrv
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }} libadwaita-1-dev

      - uses: dtolnay/rust-toolchain@1.80.1

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Check all targets
        run: |
          for i in {1..3}; do
            cargo check --all-targets && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

  clippy:
    strategy:
      fail-fast: false

    name: clippy
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }} libadwaita-1-dev

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Run clippy
        run: |
          for i in {1..3}; do
            cargo clippy --all --all-targets && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

  rustfmt:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Run rustfmt
        run: cargo fmt --all -- --check

  fedora:
    runs-on: ubuntu-24.04
    container: fedora:41

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo dnf update -y
          sudo dnf install -y ${{ env.DEPS_DNF }} libadwaita-devel

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Build all
        run: |
          for i in {1..3}; do
            cargo build --all && break
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          done

  nix:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Check flake inputs
        uses: DeterminateSystems/flake-checker-action@v4
        continue-on-error: true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v3
        continue-on-error: true

      - run: nix flake check
        continue-on-error: true

  check-links:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - uses: lycheeverse/lychee-action@v2.0.2 # later versions break fragment checks. don't bump until this is fixed: https://github.com/lycheeverse/lychee/issues/1574
        with:
          args: --offline --include-fragments 'wiki/*.md'

  publish-wiki:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
      - check-links
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          show-progress: false
      - uses: Andrew-Chen-Wang/github-wiki-action@b7e552d7cb0fa7f83e459012ffc6840fd87bcb83

  rustdoc:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Configure Cargo for reliable Git fetching
        run: |
          mkdir -p ~/.cargo
          echo '[net]' >> ~/.cargo/config.toml
          echo 'git-fetch-with-cli = true' >> ~/.cargo/config.toml
          echo 'retry = 5' >> ~/.cargo/config.toml

      - name: Generate documentation with retries
        run: |
          for i in {1..3}; do
            cargo doc --no-deps -p niri-ipc && break
            echo "Attempt $i failed, retrying in 10 seconds..."
            sleep 10
          done

      - run: cp ./resources/rustdoc-index.html ./target/doc/index.html

      - name: Deploy documentation
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          force_orphan: true
