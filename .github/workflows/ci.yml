name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *' # Monthly

env:
  RUN_SLOW_TESTS: 1
  DEPS_APT: curl gcc clang libudev-dev libgbm-dev libxkbcommon-dev libegl1-mesa-dev libwayland-dev libinput-dev libdbus-1-dev libsystemd-dev libseat-dev libpipewire-0.3-dev libpango1.0-dev libdisplay-info-dev libadwaita-1-dev
  DEPS_DNF: cargo gcc clang libudev-devel libgbm-devel libxkbcommon-devel wayland-devel libinput-devel dbus-devel systemd-devel libseat-devel pipewire-devel pango-devel cairo-gobject-devel libdisplay-info-devel

# Define retry function globally
defaults:
  run:
    shell: bash

jobs:
  # Define retry function
  define-retry:
    name: Define Retry Function
    runs-on: ubuntu-24.04
    outputs:
      retry_script: ${{ steps.set_script.outputs.script }}
    steps:
      - id: set_script
        run: |
          SCRIPT=$(cat <<EOF
          retry_command() {
            local command="$1"
            local max_attempts=3
            local attempt=1

            while true; do
              echo "Attempt #\$attempt: \$command"
              if eval "\$command"; then
                echo "Command succeeded on attempt #\$attempt."
                return 0
              else
                if [ \$attempt -lt \$max_attempts ]; then
                  echo "Command failed. Retrying in 5 seconds..."
                  sleep 5
                  attempt=\$((\$attempt + 1))
                else
                  echo "Command failed after \$max_attempts attempts."
                  return 1
                fi
              fi
            done
          }
          EOF
          )
          echo "::set-output name=script::$SCRIPT"

  build:
    needs: define-retry
    strategy:
      fail-fast: false

      matrix:
        configuration: [debug, release]

        include:
          - configuration: release
            release-flag: '--release'

    name: test - ${{ matrix.configuration }}
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.configuration }}

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Check (no default features)
        run: retry_command "cargo check ${{ matrix.release-flag }} --no-default-features"

      - name: Check (just dbus)
        run: retry_command "cargo check ${{ matrix.release-flag }} --no-default-features --features dbus"

      - name: Check (just systemd)
        run: retry_command "cargo check ${{ matrix.release-flag }} --no-default-features --features systemd"

      - name: Check (just dinit)
        run: retry_command "cargo check ${{ matrix.release-flag }} --no-default-features --features dinit"

      - name: Check (just xdp-gnome-screencast)
        run: retry_command "cargo check ${{ matrix.release-flag }} --no-default-features --features xdp-gnome-screencast"

      - name: Check
        run: retry_command "cargo check ${{ matrix.release-flag }}"

      - name: Build (with profiling)
        run: retry_command "cargo build ${{ matrix.release-flag }} --features profile-with-tracy"

      - name: Build tests
        run: retry_command "cargo test --no-run --all --exclude niri-visual-tests ${{ matrix.release-flag }}"

      - name: Test
        run: retry_command "cargo test --all --exclude niri-visual-tests ${{ matrix.release-flag }} -- --nocapture"

  # Job that runs randomized tests for a longer period of time.
  randomized-tests:
    needs: [define-retry, build]
    strategy:
      fail-fast: false

    name: randomized tests
    runs-on: ubuntu-24.04

    env:
      RUST_BACKTRACE: 1
      PROPTEST_CASES: 200000
      PROPTEST_MAX_LOCAL_REJECTS: 200000
      PROPTEST_MAX_GLOBAL_REJECTS: 200000
      PROPTEST_MAX_SHRINK_ITERS: 200000

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Build tests
        run: retry_command "cargo test --no-run --all --exclude niri-visual-tests --release"

      - name: Test
        run: retry_command "cargo test --all --exclude niri-visual-tests --release"

  visual-tests:
    needs: [define-retry, build]
    strategy:
      fail-fast: false

    name: visual tests
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Build
        run: retry_command "cargo build --package niri-visual-tests"

  msrv:
    needs: [define-retry, build]
    strategy:
      fail-fast: false

    name: msrv
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - uses: dtolnay/rust-toolchain@1.80.1

      - uses: Swatinem/rust-cache@v2

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - run: retry_command "cargo check --all-targets"

  clippy:
    needs: [define-retry, build]
    strategy:
      fail-fast: false

    name: clippy
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ${{ env.DEPS_APT }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Run clippy
        run: retry_command "cargo clippy --all --all-targets"

  rustfmt:
    needs: define-retry
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Run rustfmt
        run: retry_command "cargo fmt --all -- --check"

  fedora:
    needs: define-retry
    runs-on: ubuntu-24.04
    container: fedora:41

    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install dependencies
        run: |
          sudo dnf update -y
          sudo dnf install -y ${{ env.DEPS_DNF }} libadwaita-devel

      - uses: Swatinem/rust-cache@v2

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Build
        run: retry_command "cargo build --all"

  nix:
    needs: define-retry
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Check flake inputs
        uses: DeterminateSystems/flake-checker-action@v4
        continue-on-error: true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v3
        continue-on-error: true

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Nix flake check
        run: retry_command "nix flake check"
        continue-on-error: true

  check-links:
    needs: define-retry
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - uses: lycheeverse/lychee-action@v2.0.2 # later versions break fragment checks. don't bump until this is fixed: https://github.com/lycheeverse/lychee/issues/1574
        with:
          args: --offline --include-fragments 'wiki/*.md'

  publish-wiki:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
      - check-links
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          show-progress: false
      - uses: Andrew-Chen-Wang/github-wiki-action@b7e552d7cb0fa7f83e459012ffc6840fd87bcb83

  rustdoc:
    needs: [build, define-retry]
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - uses: dtolnay/rust-toolchain@stable

      - name: Source retry script
        run: |
          echo "${{ needs.define-retry.outputs.retry_script }}" > retry.sh
          source retry.sh

      - name: Generate documentation
        run: retry_command "cargo doc --no-deps -p niri-ipc"

      - run: cp ./resources/rustdoc-index.html ./target/doc/index.html

      - name: Deploy documentation
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
          force_orphan: true
